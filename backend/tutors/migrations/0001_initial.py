# Generated by Django 4.2.3 on 2023-07-30 10:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tutors.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TutorUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=128, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('bio', models.TextField(blank=True, max_length=2000, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('experience', models.IntegerField(blank=True, choices=[(0, 'Менее 1 года'), (1, 'Более 1 года'), (2, 'Более 2 лет'), (3, 'Более 3 лет'), (5, 'Более 5 лет'), (10, 'Более 10 лет')], max_length=20, null=True)),
                ('education', models.CharField(blank=True, max_length=255, null=True)),
                ('degree', models.CharField(blank=True, choices=[('st', 'Студент'), ('bch', 'Бакалавр'), ('mg', 'Магистр'), ('phd', 'Кандидат Наук'), ('pf', 'Профессор')], max_length=255, null=True)),
                ('yof', models.IntegerField(blank=True, null=True, validators=[tutors.models.TutorUser.positive_validator], verbose_name='Год окончания')),
                ('avatar', models.ImageField(blank=True, default='media/avatars/default_avatar.png', null=True, upload_to='media\\avatars/%Y/%m/%d')),
                ('files', models.FileField(blank=True, null=True, upload_to='fmedia\\files/%Y/%m/%d', verbose_name='Сертификат')),
                ('salary', models.IntegerField(blank=True, choices=[(1000, '1000 тнг/час'), (2000, '2000 тнг/час'), (3000, '3000 тнг/час'), (4000, '4000 тнг/час'), (5000, '5000 тнг/час'), (6000, '6000 тнг/час'), (7000, '7000 тнг/час'), (8000, '8000 тнг/час'), (9000, '9000 тнг/час'), (10000, '10000 тнг/час'), (11000, '11000 тнг/час')], max_length=200, null=True, verbose_name='Примерная ставка за час')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на видео презентацию')),
                ('activate_post', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('avatar', models.URLField(blank=True, null=True)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='client_users', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='client_users', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TutorCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutors.courses')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='tutoruser',
            name='courses',
            field=models.ManyToManyField(through='tutors.TutorCourse', to='tutors.courses'),
        ),
        migrations.AddField(
            model_name='tutoruser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='tutor_users', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='tutoruser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='titor_users', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('rating', models.PositiveIntegerField(blank=True, choices=[(1, '1 star'), (2, '2 star'), (3, '3 star'), (4, '4 star'), (5, '5 star')], null=True, verbose_name='Rating')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('client', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reviewer', to='tutors.clientuser')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('tutor', 'client')},
            },
        ),
    ]
